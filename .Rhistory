install.packages("swirl")
library("swirl")
install.packages("swirl")
library("swirl")
library(swirl)
install.packages(swirl)
install.packages("swirl")
library("swirl")
install.packages("swirl", lib="/usr/lib/R/library")
library("swirl")
install.packages("swirl", lib="/usr/local/lib/R/site-library")
library("swirl")
install.packages("swirl")
library
install.packages("swirl")
install.packages("swirl", lib.loc="~/R/x87_64-pc-linux-gnu-library/3.0")
install.packages("devtools")
library()
install.packages("swirl")
install.packages("/tmp/Rtmp2GxbkL/downloaded_packages/swirl_2.2.21.tar.gz",repos=NULL)
library(swirl)
install.packages("/tmp/Rtmp2GxbkL/downloaded_packages/swirl_2.2.21.tar.gz",repos=NULL,'lib=/usr/lib/R/library')
libPath()
.libPath()
.libPaths()
library()
install.packages("swirl")
library("swirl")
library(swirl)
library(swirl)
swirl()
q()
matrx(1,2)
matrix(1,2)
matrix(2,3)
sample(1 : 6, nosim * 10, replace = TRUE)
nosim = 1000
sample(1 : 6, nosim * 10, replace = TRUE)
nosim <- 10
sample(1 : 6, nosim * 10, replace = TRUE)
sample(1 : 6, nosim, replace = TRUE)
matrix(sample(1 : 6, nosim, replace = TRUE), nosim)
matrix(sample(1 : 6, nosim*2, replace = TRUE), nosim)
?apply
matrix(sample(1 : 6, nosim*3, replace = TRUE), nosim)
nosim  <- 10
n <- 3
matrix(rnorm(nosim * n), nosim)
choose(8,7)
choose(8,8)
choose(8,1)
choose(8,2)
2!
factorial(2)
factorial(34)
factorial(3)
qnorm(.95)
pnorm(2.8)
pnorm(2.8, lower.tail = FALSE)
pnorm(2.8, lower.tail = TRUE)
x <- ?pnorm
?pnorm
?rnorm
rnorm(1)
rnorm(2)
cumsum(c(1,2))
cumsum(c(1,2)) / 1:2
n <- 10000
means <- cumsum(rnorm(n)) / (1  : n)
head(means)
means <- cumsum(rnorm(n)) / (1  : n)
head(means)
a <- cumsum(rnorm(n))
a[0]
a[1]
b <- a/(1:n)
b[1]
set.seed(1)
a <- cumsum(rnorm(n))
a[1]
means <- cumsum(rnorm(n)) / (1  : n)
means[1]
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w2_lec05_preprocess.R', echo=TRUE)
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec01_pred_trees.R', echo=TRUE)
5/41
5/42
modFit
modFit$finalModel
5/37
32/37
33/68
68-33
35/68
10/35
20/33
13/33
modFit <- train(Species ~ Sepal.Length + Sepal.Width, method = "party", data = training)
?party
modFit <- train(Species ~ Sepal.Length + Sepal.Width, method = "tree", data = training)
install.packages("ElemStatLearn")
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec02_bagging.R', echo=TRUE)
?ozone
plot(ozone)
dim(ozone)
1:dim(ozone)
1 : dim(ozone)[1]
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec02_bagging.R', echo=TRUE)
?train
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w2_quiz.R', echo=TRUE)
install.packages("AppliedPredictiveModeling")
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w2_quiz.R', echo=TRUE)
?trainControl
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec02_bagging.R', echo=TRUE)
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec02_bagging.R', echo=TRUE)
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec02_bagging.R', echo=TRUE)
treebag
summary(treebag)
cteeBag$fit
teeBag$fit
treeBag$fit
ctreeBag$fit
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec03_rand_forest.R', echo=TRUE)
getTree(modFit$finalModel, k = 2)
getTree(modFit$finalModel, k = 1)
getTree(modFit$finalModel, k = 3)
getTree(modFit$finalModel, k = 4)
getTree(modFit$finalModel, k = 5)
getTree(modFit$finalModel, k = 8)
summary(modFit)
getTree(modFit$finalModel, k = 14)
getTree(modFit$finalModel, k = 15)
getTree(modFit$finalModel, k = 20)
getTree(modFit$finalModel, k = 200)
getTree(modFit$finalModel, k = 2000)
getTree(modFit$finalModel, k = 1000)
getTree(modFit$finalModel, k = 500)
summary(modFit)
modFit
modFit$finalModel
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec03_rand_forest.R', echo=TRUE)
str(irisP)
head(irisP)
irisP
summary(irisP)
irisP <- as.data.frame(irisP)
irisP
irisP$Species <- rownames(irisP)
irisP
rownames(irisP)
p <- qplot(Petal.Width, Petal.Length, col = Species, data = training)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 5, shape = 4, data = irisP)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 5, shape = 4, lwd = 3, data = irisP)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 5, shape = 4, cex = 3, data = irisP)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 10, shape = 4, cex = 3, data = irisP)
p <- qplot(Petal.Width, Petal.Length, col = Species, data = training)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 10, shape = 4, cex = 3, data = irisP)
p <- qplot(Petal.Width, Petal.Length, col = Species, data = training)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 10, shape = 4, data = irisP)
p <- qplot(Petal.Width, Petal.Length, col = Species, data = training)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 10, shape = 4, data = irisP)
dev.off()
p <- qplot(Petal.Width, Petal.Length, col = Species, data = training)
p + geom_point(aes(x = Petal.Width, y = Petal.Length, col = Species),
size = 10, shape = 4, data = irisP)
odFit$finalModel$prox
modFit$finalModel$prox
plot(modFit$finalModel$prox)
head(modFit$finalModel$prox)
pred <- predict(modFit, testing)
testing$predRight <- pred == testing$Species
table(pred, testingSpec)
pred <- predict(modFit, testing)
testing$predRight <- pred == testing$Species
table(pred, testing$Species)
qplot(Petal.Width, Petal.Length, col = predRight, data = testing,
main = "newdata Predictions")
predRight
testing$predRight
qplot(Petal.Width, Petal.Length, col = Species, shape = predRight,
data = testing,
main = "newdata Predictions")
qplot(Petal.Width, Petal.Length, col = Species, shape = predRight,
size = 5,
data = testing,
main = "newdata Predictions")
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec04_boosting.R', echo=TRUE)
names(Wage)
library(ISLR); data("Wage"); library(ggplot2); library(caret)
names(Wage)
head(Wage$logwage)
length(Wage$logwage)
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec04_boosting.R', echo=TRUE)
source('~/Documents/01-coursera/01-data-science/08-practical-ml/w3_lec04_boosting.R', echo=TRUE)
qplot(predict(modFit, testing), wage, data = testing)
